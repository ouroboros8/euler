'''
Problem 002:

    Each new term in the Fibonacci sequence is generated by adding the
    previous two terms. By starting with 1 and 2, the first 10 terms
    will be:

        1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

    By considering the terms in the Fibonacci sequence whose values do
    not exceed four million, find the sum of the even-valued terms.
'''

from timeit import timeit
from itertools import takewhile

def fibonacci():
    current_fib = 1
    next_fib = 1
    while True:
        yield current_fib
        (current_fib, next_fib) = (next_fib, next_fib + current_fib)

def solve():
    ans = 0

    fibs = fibonacci()
    fib = next(fibs)
    while fib <= 4*10**6:
        if fib % 2 == 0:
            ans += fib
        fib = next(fibs)
    return ans

if __name__ == '__main__':
    print(solve())
