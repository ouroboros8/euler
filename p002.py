'''
Problem 002:

    Each new term in the Fibonacci sequence is generated by adding the
    previous two terms. By starting with 1 and 2, the first 10 terms
    will be:

        1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

    By considering the terms in the Fibonacci sequence whose values do
    not exceed four million, find the sum of the even-valued terms.
'''

def fibonaccis_below(num):
    '''
    Return a list of the first N Fibonacci numbers
    '''
    # NOTE: this can probably be made more efficient as a generator
    fibs = [1, 2]
    while fibs[-1] < num:
        length = len(fibs)
        # lots of append calls here!
        fibs.append(fibs[length-2] + fibs[length-1])
    return fibs[0:-1]

def solve():
    '''
    Solve the problem.
    '''
    ans = 0
    fibs = fibonaccis_below(4*10**6)

    for i in fibs:
        if i % 2 == 0:
            ans = ans + i
    return ans

if __name__ == '__main__':
    print(solve())
